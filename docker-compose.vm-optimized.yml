# StreamGank - VM-Optimized Docker Compose Configuration
# Optimized for Virtual Machine environments with resource management and performance tuning

services:
    # StreamGank Complete Frontend - React + Express + Python + Redis (ALL-IN-ONE)
    streamgank-frontend:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: streamgank-frontend
        restart: unless-stopped
        ports:
            - "3000:3000"
        # VM-optimized resource limits for complete frontend
        deploy:
            resources:
                limits:
                    memory: 3G
                    cpus: "1.5"
                reservations:
                    memory: 512M
                    cpus: "0.25"
        env_file:
            - .env
        environment:
            - NODE_ENV=${NODE_ENV}
            - VITE_BACKEND_URL=${VITE_BACKEND_URL:-http://localhost:3000}
            - BACKEND_URL=${BACKEND_URL:-http://localhost:3000}
            - PORT=3000
            # Pass through all environment variables from main .env
            - APP_ENV=${APP_ENV}
            - STREAMGANK_DATA_PATH=${STREAMGANK_DATA_PATH}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - HEYGEN_API_KEY=${HEYGEN_API_KEY}
            - CREATOMATE_API_KEY=${CREATOMATE_API_KEY}
            - CLOUDINARY_URL=${CLOUDINARY_URL}
            - WEBHOOK_BASE_URL=${WEBHOOK_BASE_URL:-http://streamgank-frontend:3000}
            # Python environment
            - PYTHONPATH=${PYTHONPATH}
            - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
            # Multi-worker queue configuration
            - MAX_WORKERS=${MAX_WORKERS:-3}
            - ENABLE_CONCURRENT_PROCESSING=${ENABLE_CONCURRENT_PROCESSING:-false}
            # VM performance optimizations
            - MALLOC_ARENA_MAX=2
            - PYTHONDONTWRITEBYTECODE=1
            - NODE_OPTIONS=--max-old-space-size=500
        volumes:
            # Use named volumes for better VM performance
            - streamgank_assets:/app/assets
            - streamgank_videos:/app/videos
            - streamgank_outputs:/app/outputs
            # Combined output directories for better performance
            - streamgank_temp:/app/temp_videos
            - streamgank_temp:/app/screenshots
            - streamgank_temp:/app/clips
            - streamgank_temp:/app/covers
            - streamgank_temp:/app/scroll_frames
            - streamgank_temp:/app/trailers
            # Configuration and logs (bind mounts)
            - ./scripts:/app/scripts:cached
            - ./test_output:/app/test_output:cached
            - ./streamgank-reels:/app/streamgank-reels:cached
        depends_on:
            - redis
        networks:
            - streamgank-network
        # VM-optimized settings
        tty: true
        stdin_open: true

    # Redis - Local Instance for VM (better than external for dev/testing)
    redis:
        image: redis:7.2-alpine
        container_name: streamgankvideos-redis
        restart: unless-stopped
        ports:
            - "6379:6379" # Expose Redis port for external Node.js server
        deploy:
            resources:
                limits:
                    memory: 256M
                    cpus: "0.25"
                reservations:
                    memory: 64M
                    cpus: "0.05"
        # VM-optimized Redis configuration with password authentication
        command: redis-server --maxmemory 200mb --maxmemory-policy allkeys-lru --save 300 1 --tcp-keepalive 60 --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        networks:
            - streamgank-network
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "2"
        healthcheck:
            test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
            interval: 30s
            timeout: 5s
            retries: 3
            start_period: 5s

# Named volumes for better VM performance and management
volumes:
    streamgank_assets:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${STREAMGANK_DATA_PATH}/assets
    streamgank_videos:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${STREAMGANK_DATA_PATH}/videos
    streamgank_outputs:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${STREAMGANK_DATA_PATH}/outputs
    streamgank_temp:
        driver: local
        driver_opts:
            type: tmpfs
            device: tmpfs
            o: size=2g,uid=1000,gid=1000 # Temporary files in RAM for speed
    redis_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${STREAMGANK_DATA_PATH}/redis

# VM-optimized network configuration
networks:
    streamgank-network:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.enable_icc: "true"
            com.docker.network.bridge.enable_ip_masquerade: "true"
            com.docker.network.driver.mtu: 1500
        ipam:
            config:
                - subnet: 172.20.0.0/16
